# Cursor Updates

- Ran production build verification - build completed successfully with no TypeScript or compilation errors
- Performed build check on Next.js app with tRPC and Tailwind configuration
- Successfully ran production build with Prisma generation and Next.js compilation
- Fixed dynamic route warning by adding force-dynamic config to root page
- Added Storybook with Button component and stories, updated .cursorrules with Storybook guidelines
- Captured screenshot of Button component stories in Storybook
- Added localStorage persistence for right sidebar width to maintain user's preferred width across sessions.
- Fixed issue with right sidebar width persistence by improving the save mechanism and directly interacting with localStorage.
- Removed unused WebSocket configuration from tRPC client to eliminate browser console errors.
- Fixed CSS transition conflicts in the right sidebar that caused incorrect width rendering on page reload.
- Fixed React hydration mismatch errors by implementing hasMounted pattern for sidebar widths loaded from localStorage.
- Migrated database from Prisma to Supabase with user authentication and profiles table using Row Level Security policies.
- Created setup script to initialize Supabase database, apply migrations, and create test user.
- Added test connection script to verify Supabase setup and display database information.
- Created migration files for profiles table schema and a helper function to list tables.
- Successfully ran production build with Supabase authentication system, verifying compatibility of the migration from Prisma.
- Implemented client-side authentication with Supabase Auth, including login form, auth check component, and logout button.
- Added user settings with database persistence to replace localStorage for authenticated users.
- Fixed authentication token passing between client and API routes for user settings.
- Simplified theme toggle in header to directly toggle between light and dark (removed system option and dropdown).
- Fixed sidebar width layout shifts by implementing a delayed rendering approach - component won't render until user settings are fully loaded.
- Cleaned up implementation by removing unused code, components, and dependencies.
- Improved left sidebar resize functionality with better cursor handling and integration with nested sidebars.
- Enhanced resize handles with better usability, wider drag areas, touch support, and visual feedback.
- Refactored sidebar resize functionality into respective components for better encapsulation and consistent behavior.
- Removed unused NextAuth code and API routes, fixing the "EMAIL_REQUIRES_ADAPTER_ERROR" during development.
- Fixed tRPC module imports and updated authentication to use the local Supabase client, resolving build errors.
- Completely removed unused tRPC framework code, including client/server files, API routes, and dependencies to simplify the codebase.
- Fixed left sidebar resize functionality after closing nested sidebar by enhancing resize handle visibility and refreshing event listeners.
- Implemented resizable nested sidebar allowing users to resize the entire sidebar even when the nested sidebar is open.
- Improved sidebar resize UX by moving resize functionality to the nested sidebar when open and back to the main sidebar when closed.
- Removed all width transitions when opening or closing nested sidebars for immediate visual feedback and snappier interface.
- Fixed DOM manipulation error in sidebar resize code by simplifying the approach and removing React key conflicts.
- Added right border to nested sidebar to match the left sidebar's appearance for consistent UI styling.
- Added tooltips to main left sidebar icons when the nested sidebar is open to improve navigation and discoverability.
- Fixed tooltip visibility issues by adding proper z-index, forcing mount, and improving the hover area for sidebar icons.
- Fixed tooltip flashing issue when opening nested sidebar and adjusted z-index hierarchy to ensure proper tooltip display.
- Fixed nested sidebar content visibility issue by correcting z-index values to use valid Tailwind classes.
- Improved z-index hierarchy to ensure tooltips display above nested sidebar content while maintaining proper event handling.
- Fixed tooltip rendering by implementing a Portal pattern to ensure tooltips are rendered at the root DOM level, preventing z-index stacking context issues.
- Updated tooltips to appear instantly with no delay and positioned them 20px to the left for better UI placement.
- Removed the New button and question mark help icon from the header for a cleaner interface.
- Made the Settings button in the left sidebar full-width to match other menu items for visual consistency.
- Added Import option to the left sidebar below Settings and created a new blank import page for future functionality.
- Refactored application structure to use a shared layout pattern with proper route groups, enabling consistent UI across dashboard, import, and future pages.
- Simplified layout structure with a single layout file that includes header, sidebars, and content area, shared by dashboard and import pages.
- Implemented proper layout structure with a single shared layout file supporting nested components, fixing circular dependency issues with context providers.
- Simplified application structure with direct route paths (dashboard/page.tsx, import/page.tsx) and a shared dashboard layout component, eliminating route groups.
- Improved navigation by changing Inbox to Dashboard in the sidebar, making the app name in header link to dashboard, and adding dynamic breadcrumbs.
- Created a custom LogoIcon component that can be updated with the site's SVG logo and integrated it into the header.
- Implemented the custom leaf/flame SVG logo into the LogoIcon component for use in the application header.
- Implemented client-side navigation with dedicated route groups and an AppShell component to avoid full page reloads between app sections.
- Added a custom color palette with coral and teal colors, enhancing the application's visual appeal across buttons, icons, and UI elements.
- Refactored color system to use semantic naming (brand, primary, secondary, neutral, base) rather than appearance-based names, making future theme changes easier.
- Enhanced dark mode with a dedicated color palette, improved contrast, and consistent styling across all components for better accessibility and user experience.
- Updated dark mode sidebars to have matching background colors, ensuring consistent appearance between the header and both left and right sidebars.
- Improved right sidebar styling in dark mode by updating borders, property item borders, and resize handle hover states to match the subtle styling of the left sidebar for better visual consistency.
